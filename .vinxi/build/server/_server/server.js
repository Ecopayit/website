import{isPlainObject as m,isRedirect as A,isNotFound as F}from"@tanstack/react-router";import L from"tiny-invariant";import{AsyncLocalStorage as N}from"node:async_hooks";import{H3Event as v,getRequestURL as z,getRequestWebStream as H,getResponseStatus as M,eventHandler as P}from"h3";import{getContext as I}from"unctx";const c={stringify:e=>JSON.stringify(e,function(n,r){const o=this[n],i=y.find(f=>f.stringifyCondition(o));return i?i.stringify(o):r}),parse:e=>JSON.parse(e,function(n,r){const o=this[n];if(m(o)){const i=y.find(f=>f.parseCondition(o));if(i)return i.parse(o)}return r}),encode:e=>{if(Array.isArray(e))return e.map(n=>c.encode(n));if(m(e))return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,c.encode(r)]));const t=y.find(n=>n.stringifyCondition(e));return t?t.stringify(e):e},decode:e=>{if(m(e)){const t=y.find(n=>n.parseCondition(e));if(t)return t.parse(e)}return Array.isArray(e)?e.map(t=>c.decode(t)):m(e)?Object.fromEntries(Object.entries(e).map(([t,n])=>[t,c.decode(n)])):e}},p=(e,t,n,r)=>({key:e,stringifyCondition:t,stringify:o=>({[`$${e}`]:n(o)}),parseCondition:o=>Object.hasOwn(o,`$${e}`),parse:o=>r(o[`$${e}`])}),y=[p("undefined",e=>e===void 0,()=>0,()=>{}),p("date",e=>e instanceof Date,e=>e.toISOString(),e=>new Date(e)),p("error",e=>e instanceof Error,e=>({...e,message:e.message,stack:void 0,cause:e.cause}),e=>Object.assign(new Error(e.message),e)),p("formData",e=>e instanceof FormData,e=>{const t={};return e.forEach((n,r)=>{const o=t[r];o!==void 0?Array.isArray(o)?o.push(n):t[r]=[o,n]:t[r]=n}),t},e=>{const t=new FormData;return Object.entries(e).forEach(([n,r])=>{Array.isArray(r)?r.forEach(o=>t.append(n,o)):t.append(n,r)}),t}),p("bigint",e=>typeof e=="bigint",e=>e.toString(),e=>BigInt(e))];function W(e){let t;const n=q(e),r={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...r,body:e.node.req.body}):new Request(n,{...r,get body(){return t||(t=G(e),t)}})}function J(e){return e.web??(e.web={request:W(e),url:q(e)}),e.web.request}function U(){return $()}const _=Symbol("$HTTPEvent");function B(e){return typeof e=="object"&&(e instanceof v||e?.[_]instanceof v||e?.__is_event__===!0)}function C(e){return function(...t){var n;const r=t[0];if(B(r))t[0]=r instanceof v||r.__is_event__?r:r[_];else{if(!((n=globalThis.app.config.server.experimental)!=null&&n.asyncContext))throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");t.unshift(U())}return e(...t)}}const q=C(z),V=C(M),G=C(H);function K(){var e;return I("nitro-app",{asyncContext:!!((e=globalThis.app.config.server.experimental)!=null&&e.asyncContext),AsyncLocalStorage:N})}function $(){const e=K().use().event;if(!e)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");return e}const Q={},oe=P(X),h=Q;async function X(e){const t=J(e);return await Z({request:t,event:e})}function Y(e){return e.replace(/^\/|\/$/g,"")}async function Z({request:e,event:t}){const n=new AbortController,r=n.signal,o=()=>n.abort();t.node.req.on("close",o);const i=e.method,f=new URL(e.url,"http://localhost:3000"),j=new RegExp(`${Y("/_server")}/([^/?#]+)`),E=f.pathname.match(j),u=E?E[1]:null,w=Object.fromEntries(f.searchParams.entries()),S="createServerFn"in w;if(typeof u!="string")throw new Error("Invalid server action param for serverFnId: "+u);const b=h[u];if(!b)throw console.log("serverFnManifest",h),new Error("Server function info not found for "+u);let l;if(l=await b.importer(),!l)throw console.log("serverFnManifest",h),new Error("Server function module not resolved for "+u);const d=l[b.functionName];if(!d)throw console.log("serverFnManifest",h),console.log("fnModule",l),new Error(`Server function module export not resolved for serverFn ID: ${u}`);const D=["multipart/form-data","application/x-www-form-urlencoded"],R=await(async()=>{try{let s=await(async()=>{if(e.headers.get("Content-Type")&&D.some(a=>{var T;return(T=e.headers.get("Content-Type"))==null?void 0:T.includes(a)}))return L(i.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await d(await e.formData(),r);if(i.toLowerCase()==="get"){let a=w;return S&&(a=w.payload),a=a&&c.parse(a),await d(a,r)}const g=await e.text(),x=c.parse(g);return S?await d(x,r):await d(...x,r)})();return s instanceof Response||!S&&(s=s.result,s instanceof Response)?s:A(s)||F(s)?O(s):new Response(s!==void 0?c.stringify(s):void 0,{status:V($()),headers:{"Content-Type":"application/json"}})}catch(s){return s instanceof Response?s:A(s)||F(s)?O(s):(console.info(),console.info("Server Fn Error!"),console.info(),console.error(s),console.info(),new Response(c.stringify(s),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(t.node.req.removeListener("close",o),R.headers.get("Content-Type")==="application/json"){const g=await R.clone().text();g&&JSON.stringify(JSON.parse(g))}return R}function O(e){const{headers:t,...n}=e;return new Response(JSON.stringify(n),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{oe as default};
